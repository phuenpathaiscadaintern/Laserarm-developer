#include <ArduinoBLE.h>

#define SERVICE_UUID        "87E01439-99BE-45AA-9410-DB4D3F23EA99"
#define CHARACTERISTIC_UUID "D90A7C02-9B21-4243-8372-3E523FA7978B"

BLEService customService(SERVICE_UUID);
BLECharacteristic shootCharacteristic(CHARACTERISTIC_UUID, BLERead | BLENotify, 20);

const int MIC_PIN = A0;  // ‡∏û‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡πÑ‡∏°‡πÇ‡∏Ñ‡∏£‡πÇ‡∏ü‡∏ô
const int SOUND_THRESHOLD = 700;  // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏Å‡∏≤‡∏£‡∏¢‡∏¥‡∏á (0 - 1023)

void setup() {
    Serial.begin(115200);
    while (!Serial);
    Serial.println("üöÄ Starting Slave Node...");

    if (!BLE.begin()) {
        Serial.println("‚ùå Failed to start BLE!");
        while (1);
    }

    BLE.setLocalName("XIAO nRF52840");
    BLE.setAdvertisedService(customService);
    customService.addCharacteristic(shootCharacteristic);
    BLE.addService(customService);
    
    shootCharacteristic.setValue("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏á");

    BLE.advertise();
    Serial.println("üì° Advertising BLE Service...");
}

void loop() {
    BLEDevice central = BLE.central();
    if (central) {
        Serial.print("‚úÖ Connected to: ");
        Serial.println(central.address());

        while (central.connected()) {
            int soundLevel = analogRead(MIC_PIN);  // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡πÇ‡∏Ñ‡∏£‡πÇ‡∏ü‡∏ô
            Serial.print("üîä Sound Level: ");
            Serial.println(soundLevel);

            if (soundLevel > SOUND_THRESHOLD) {
                Serial.println("üî• ‡∏¢‡∏¥‡∏á‡πÅ‡∏•‡πâ‡∏ß!");
                shootCharacteristic.setValue("‡∏¢‡∏¥‡∏á‡πÅ‡∏•‡πâ‡∏ß");
            } else {
                shootCharacteristic.setValue("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏á");
            }

            BLE.poll();  
            delay(500);  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ó‡∏∏‡∏Å‡πÜ 500ms
        }

        Serial.println("üîÑ Disconnected! Restarting advertisement...");
        BLE.advertise();
    }
}
